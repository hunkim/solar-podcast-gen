rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own generations
    match /generations/{generationId} {
      // Allow create if the user owns the document being created
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Allow read if the user owns the document
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow update if the user owns the document
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow delete if the user owns the document
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Users can read all podcasts (public), but for now we'll allow full access
    // In production, you might want to add userId field to podcasts and restrict access
    match /podcasts/{podcastId} {
      allow read, write, create, delete: if request.auth != null;
    }
  }
} 